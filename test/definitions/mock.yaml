---
#id: mock
name: MockIndexer
identifier: mock
description: MockIndexer is a mock indexer.
language: en-us
urls:
  - http://localhost:3999
privacy: private
protocol: torrent
supports:
  - irc
  - api
source: custom
settings:
  - name: rsskey
    type: secret
    label: RSS key
    help: "Go to your profile and copy your RSS key"
    regex: /([\da-fA-F]{20})

irc:
  network: Mock
  server: localhost
  port: 6697
  tls: false
  channels:
    - "#announces"
  announcers:
    - _AnnounceBot_
  settings:
    - name: nick
      type: text
      required: true
      label: Nick
      help: Bot nick. Eg. user_bot

    - name: auth.account
      type: text
      required: false
      label: NickServ Account
      help: NickServ account. Make sure to group your user and bot.

    - name: auth.password
      type: secret
      required: false
      label: NickServ Password
      help: NickServ password

  parse:
    type: single
    lines:
      - test:
          - "New Torrent Announcement: <PC :: Iso>  Name:'debian live 10 6 0 amd64 standard iso' uploaded by 'Anonymous' -  http://localhost:3999/torrent/000000"
          - "New Torrent Announcement: <PC :: Iso>  Name:'debian live 10 6 0 amd64 standard iso' uploaded by 'Anonymous' freeleech -  http://localhost:3999/torrent/000000"
        pattern: New Torrent Announcement:\s*<([^>]*)>\s*Name:'(.*)' uploaded by '([^']*)'\s*(freeleech)*\s*-\s*(https?\:\/\/[^\/]+\/)torrent\/(\d+)
        vars:
          - category
          - torrentName
          - uploader
          - freeleech
          - baseUrl
          - torrentId

    match:
      torrenturl: "/file/{{ .torrentId }}/{{ .torrentName }}.torrent"
      encode:
        - torrentName
