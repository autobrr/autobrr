name: build

on:
  push:
    branches:
      - "master"
      - "develop"
    tags:
      - 'v*'
  pull_request:

permissions:
  contents: write
  packages: write

jobs:
  web:
    name: Build web
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'yarn'
          cache-dependency-path: web/yarn.lock

      - name: Build web
        run: |
          cd web && yarn install
          CI= yarn build

      - name: Upload web production build
        uses: actions/upload-artifact@v3
        with:
          name: web-build
          path: web/build

  test:
    name: Test
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    needs: web
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Download web production build
        uses: actions/download-artifact@v3
        with:
          name: web-build
          path: web/build

      # 1.20 is the last version to support Windows < 10, Server < 2016, and MacOS < 1.15.
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.20.1'
          cache: true

      - name: Test
        run: go test -v ./...

  goreleaserbuild:
    name: Build Go binaries
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    needs: [web, test]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Download web production build
        uses: actions/download-artifact@v3
        with:
          name: web-build
          path: web/build

#     1.20 is the last version to support Windows < 10, Server < 2016, and MacOS < 1.15.
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.20.1'
          cache: true

      - name: Run GoReleaser build
        uses: goreleaser/goreleaser-action@v2
        with:
          distribution: goreleaser
          version: latest
          args: release --rm-dist --skip-publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload assets
        uses: actions/upload-artifact@v3
        with:
          name: autobrr
          path: dist/*

  goreleaser:
    name: Build & publish binaries and images
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: [web, test]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Download web production build
        uses: actions/download-artifact@v3
        with:
          name: web-build
          path: web/build

#     1.20 is the last version to support Windows < 10, Server < 2016, and MacOS < 1.15.
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.20.1'
          cache: true

      - name: Run GoReleaser build and publish tags
        uses: goreleaser/goreleaser-action@v3
        with:
          distribution: goreleaser
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload assets
        uses: actions/upload-artifact@v3
        with:
          name: autobrr
          path: dist/*

  docker:
    name: Build and publish Docker images
    runs-on: ubuntu-latest
    needs: [web, test]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Download web production build
        uses: actions/download-artifact@v3
        with:
          name: web-build
          path: web/build

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/autobrr/autobrr

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and publish image
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./ci.Dockerfile
          platforms: linux/amd64,linux/arm/v7,linux/arm64/v8
          push: ${{ github.repository_owner == 'autobrr' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BUILDTIME=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.created'] }}
            VERSION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
            REVISION=${{ github.event.pull_request.head.sha }}
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
