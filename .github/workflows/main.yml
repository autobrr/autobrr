
name: build

on:
  push:
    branches:
      - "master"
      - "develop"
    tags:
      - 'v*'
  pull_request:

env:
  REGISTRY: ghcr.io
  REGISTRY_IMAGE: ghcr.io/${{ github.repository }}

permissions:
  contents: write
  packages: write

jobs:
  web:
    name: Build web
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '20.10.0'

      - name: Set up corepack
        run: corepack enable

      # It can not be done before enable corepack
      - name: Set up cache
        uses: actions/setup-node@v4
        with:
          cache: pnpm
          cache-dependency-path: web/pnpm-lock.yaml

      - name: Fetch web dependencies
        working-directory: web
        run: pnpm install --frozen-lockfile

      - name: Build web frontend
        working-directory: web
        run: CI= pnpm run build

      - name: Upload web production build
        uses: actions/upload-artifact@v4
        with:
          name: web-dist
          path: web/dist

  test:
    name: Test
    runs-on: ubuntu-latest
    services:
      test_postgres:
        image: postgres:12.10
        ports:
          - "5437:5432"
        env:
          POSTGRES_USER: testdb
          POSTGRES_PASSWORD: testdb
          POSTGRES_DB: autobrr
        options: --health-cmd pg_isready --health-interval 1s --health-timeout 5s --health-retries 60
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 1.20 is the last version to support Windows < 10, Server < 2016, and MacOS < 1.15.
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.0'
          cache: true

      - name: Test
        run: go run gotest.tools/gotestsum@latest --junitfile unit-tests.xml --format pkgname -- ./... -tags=integration

      - name: Test Summary
        uses: test-summary/action@v2
        with:
          paths: "unit-tests.xml"
        if: always()

  goreleaserbuild:
    name: Build distribution binaries
    runs-on: ubuntu-latest
    needs: [web, test]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download web production build
        uses: actions/download-artifact@v4
        with:
          name: web-dist
          path: web/dist

#     1.20 is the last version to support Windows < 10, Server < 2016, and MacOS < 1.15.
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.0'
          cache: true

      - name: Run GoReleaser build
        if: github.event_name == 'pull_request'
        uses: goreleaser/goreleaser-action@v5
        with:
          distribution: goreleaser
          version: latest
          args: release --clean --skip=validate --skip=publish --parallelism 5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run GoReleaser build and publish tags
        if: startsWith(github.ref, 'refs/tags/')
        uses: goreleaser/goreleaser-action@v5
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload assets
        uses: actions/upload-artifact@v4
        with:
          name: autobrr
          path: |
            dist/*.tar.gz
            dist/*.zip
            dist/*.apk
            dist/*.deb
            dist/*.rpm
